<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">
    <munit:config name="munit" doc:name="MUnit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:mulesoft-weather-application.xml"/>
    </spring:beans>
    <munit:test name="mulesoft-weather-application-test-suite-searchCityFlowTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Database']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[ ['country_code':&quot;a&quot;, 'country_name':&quot;A&quot;]]"/>
        </mock:when>
        <flow-ref name="searchCityFlow" doc:name="searchCityFlow"/>
        <munit:assert-payload-equals expectedValue="#[regex(&quot;&lt;html&gt;(.*?)&lt;/html&gt;&quot;)]" doc:name="Assert Payload"/>
    </munit:test>
</mule>
